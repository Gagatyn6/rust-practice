use std::env;
use std::fs::File;
use std::io::{self, BufReader, BufRead};

/// Функція для підрахунку рядків у файлі.
/// Повертає кількість рядків або помилку у випадку проблем із читанням файлу.
fn підрахувати_рядки(шлях_до_файлу: &str) -> io::Result<usize> {
    let файл = File::open(шлях_до_файлу)?; // Відкриваємо файл
    let читач = BufReader::new(файл); // Обгортаємо у буферизований читач
    
    let кількість = читач.lines().count(); // Рахуємо кількість рядків
    
    Ok(кількість)
}

fn main() {
    // Отримуємо список аргументів командного рядка
    let аргументи: Vec<String> = env::args().collect();

    // Перевіряємо, чи користувач передав шлях до файлу
    if аргументи.len() < 2 {
        eprintln!("Помилка: потрібно вказати шлях до файлу!");
        std::process::exit(1);
    }

    let шлях_до_файлу = &аргументи[1]; // Отримуємо шлях до файлу

    // Викликаємо функцію підрахунку рядків та обробляємо результат
    match підрахувати_рядки(шлях_до_файлу) {
        Ok(кількість) => {
            println!("Файл '{}': містить {} рядків.", шлях_до_файлу, кількість);
        }
        Err(помилка) => {
            eprintln!("Не вдалося відкрити файл '{}': {}", шлях_до_файлу, помилка);
            std::process::exit(1);
        }
    }
}
